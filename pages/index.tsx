
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from "react";
import Articlestyles from '../styles/Article.module.css'


export default function Home({articles}:{articles:any}) {

const [cities, setCities] = useState([]); 
const [loading, setLoading] = useState(false); 
const [search, setSearch] = useState("");  
const [filteredCities, setFilteredCities] = useState([]); 

  useEffect(() => { setFilteredCities(articles.filter( (user:any) => {
    const regex = new RegExp(`^${search}`, 'gi');
    return user.inName.match(regex) || user.id.match(regex) || user.inSchool.match(regex)})
    )},
    [search,articles]);

    if (search.length === 0) {
      articles = [];
       (Articlestyles.userlist  ! ==='');
      
  }

  return (   
    <>
      <Head>
        <title>idcenter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.body}>
        <div className={styles.container}>
              <header className={styles.header}>
                  <h2 className={styles.title}>Filter</h2>
                 <small className={styles.subtitle}>filter by name or Id or institution </small>
                 <input type="text" placeholder="type here" onChange={(e) => setSearch(e.target.value)} /> 
              </header>  
              <div  className = { Articlestyles.userlist } > 
              {filteredCities.map((article:any,index) => (
                <a key={index}>   
                <img className={Articlestyles.img} src={article.picturepath}alt="picturepath"/>
                <div className={Articlestyles.p4}>
                <h4 className={Articlestyles.h3}>{article.inName}</h4>
                <p className={Articlestyles.p}>{article.inSchool}</p>
                <p className={Articlestyles.p1}>{article.reg}</p>
                <p className={Articlestyles.p2}>KIN:{article.inparentno}</p>
                 </div>
            </a>
        
                

            ))} 
        </div>       
        </div>       
      </div>
          
    </>
  )
}


  export const getStaticProps = async () => {
    const res = await fetch(`http://localhost:8000/posts`)
    const articles = await res.json()
    return {
      props:{
        articles,
      }
    }}
  